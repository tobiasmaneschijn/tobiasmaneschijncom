/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 .\src\assets\models\moon.glb --types --transform
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useLoader } from "@react-three/fiber";
import { TextureLoader } from "three";

type GLTFResult = GLTF & {
  nodes: {
    Plane002: THREE.Mesh;
    Cylinder: THREE.Mesh;
    Cube004: THREE.Mesh;
    Cube004_1: THREE.Mesh;
    Cube004_2: THREE.Mesh;
    Cube004_3: THREE.Mesh;
    Sphere: THREE.Mesh;
  };
  materials: {
    ["Material.007"]: THREE.MeshStandardMaterial;
    boosters: THREE.MeshStandardMaterial;
    ["Material.005"]: THREE.MeshStandardMaterial;
  };
};

export function MoonModel(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "./src/assets/models/moon-transformed.glb"
  ) as GLTFResult;
  const [colorMap] = useLoader(TextureLoader, ["./src/assets/models/moon.jpg"]);

  const flagMaterial = new THREE.MeshStandardMaterial({ map: colorMap });

  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Plane002.geometry}
        material={flagMaterial}
        position={[1.46, 5.4, -2.36]}
        rotation={[-0.31, 0, -Math.PI / 2]}
        scale={[0.27, 0.38, 0.44]}
      />
      <mesh
        geometry={nodes.Cylinder.geometry}
        material={materials["Material.007"]}
        position={[1.44, 5.25, -1.81]}
        rotation={[-0.3, 0, 0]}
        scale={[0.06, 0.59, 0.06]}
      />
      <group
        position={[-0.79, 3.85, -5.39]}
        rotation={[1.53, -0.26, 2.58]}
        scale={[0.12, 0.06, 0.27]}
      >
        <mesh
          geometry={nodes.Cube004.geometry}
          material={materials["Material.007"]}
        />
        <mesh
          geometry={nodes.Cube004_1.geometry}
          material={materials.boosters}
        />
        <mesh
          geometry={nodes.Cube004_2.geometry}
          material={materials["Material.007"]}
        />
        <mesh
          geometry={nodes.Cube004_3.geometry}
          material={materials["Material.007"]}
        />
      </group>
      <mesh
        geometry={nodes.Sphere.geometry}
        material={materials["Material.005"]}
        rotation={[0, 0.37, 0]}
        scale={5.11}
      />
    </group>
  );
}

useGLTF.preload("/moon-transformed.glb");
