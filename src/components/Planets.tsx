/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public\models\planets.glb --types
*/

import * as THREE from "three";
import React, { useLayoutEffect, useRef } from "react";
import { useGLTF, useScroll } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useFrame } from "@react-three/fiber";
import gsap from "gsap";

type GLTFResult = GLTF & {
  nodes: {
    Moon1: THREE.Mesh;
    Moon2: THREE.Mesh;
    Moon3: THREE.Mesh;
  };
  materials: {
    ["1"]: THREE.MeshStandardMaterial;
  };
};

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/models/planets.glb") as GLTFResult;
  const tl = useRef<gsap.core.Timeline>();
  const planet1Ref =
    useRef<THREE.Group>() as React.MutableRefObject<THREE.Group>;
  const planet2Ref =
    useRef<THREE.Group>() as React.MutableRefObject<THREE.Group>;
  const planet3Ref =
    useRef<THREE.Group>() as React.MutableRefObject<THREE.Group>;

  return (

    <group
      {...props}
      dispose={null}
      ref={planet1Ref}
      position={[20, -100, -100]}
     
    >
      <mesh geometry={nodes["Moon1"].geometry} material={materials["1"]} />
      <group >
        <group ref={planet2Ref}>
          <mesh
            geometry={nodes["Moon2"].geometry}
            material={materials["1"]}
          />
        </group>
      </group>
      <group >
        <group ref={planet3Ref}>
          <mesh
            geometry={nodes["Moon3"].geometry}
            material={materials["1"]}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/models/planets.glb");
